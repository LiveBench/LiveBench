tools:
  edit:
    signature: |
      edit <SEARCH>{search}</SEARCH> <REPLACE>{replace}</REPLACE> <REPLACEALL>{replace-all}</REPLACEALL>
    docstring: >
      Replace first occurrence of <search> with <replace> in the currently displayed lines.
      replace-all is either True or False.
      If replace-all is True , replace all occurrences of <search> with <replace>.

      For example, if you are looking at this file:

      def fct():
          print("Hello world")

      and you want to edit the file to read:

      def fct():
          print("Hello")
          print("world")

      you can search for `Hello world` and replace with `Hello")\n    print("world")`
      (note the extra spaces before the print statement!).

      <thought_action_call_example>
      You would make the following call:

      edit <SEARCH>Hello world</SEARCH> <REPLACE>Hello")\n    print("world")</REPLACE> <REPLACEALL>False</REPLACEALL>

      Note that the XML tags are essential and must be included and properly formatted.
      Note that the curly braces are NOT included.
      Pay close attention to the command signature.
      </thought_action_call_example>

      Tips:

      1. Always include proper whitespace/indentation
      2. When you are adding an if/with/try statement, you need to INDENT the block that follows, so make sure to include it in both your search and replace strings!
      3. If you are wrapping code in a try statement, make sure to also add an 'except' or 'finally' block.

      Before every edit, please

      1. Explain the code you want to edit and why it is causing the problem
      2. Explain the edit you want to make and how it fixes the problem
      3. Explain how the edit does not break existing functionality
    arguments:
      - name: search
        type: string
        description: "the text to search for (make sure to include proper whitespace if needed)"
        required: true
      - name: replace
        type: string
        description: "the text to replace the search with (make sure to include proper whitespace if needed)"
        required: true
      - name: replace-all
        type: boolean
        description: "replace all occurrences rather than the first occurrence within the displayed lines"
        required: false
  insert:
    signature: |
      insert <TEXT>{text}</TEXT> [<line>]
    docstring: >
      Insert <text> at the end of the currently opened file or after <line> if specified.

      <thought_action_call_example>
      Example:
      To insert "Hello, World" at the end of the current file:
      insert <TEXT>Hello, World</TEXT>

      To insert "Hello, World" after line 10:
      insert <TEXT>Hello, World</TEXT> 10
      </thought_action_call_example>
    arguments:
      - name: text
        type: string
        description: "the text to insert"
        required: true
      - name: line
        type: integer
        description: "the line number to insert the text as new lines after"
        required: false
