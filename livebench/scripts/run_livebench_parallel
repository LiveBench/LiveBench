#!/bin/bash
## Run multiple livebench benchmark tests in parallel using the specified model.
## For each benchmark subset, this script will run gen_api_answer and then gen_ground_truth_judgment.
## Each benchmark subset is run in a separate tmux pane; all panes are part of the same tmux session.
## The question-source argument is optional; if not provided, the questions will be downloaded from huggingface
## Usage: run_livebench_parallel <model> <venv-path> <question-source>
## Example: run_livebench_parallel gpt-4o-mini ../.venv/bin/activate jsonl

model=$1
venv=$2
question_source=${3:-'huggingface'}
api_base=$4
api_key_name=$5

if [ -z "$model" ] || [ -z "$venv" ]; then
    echo "Usage: run_livebench_parallel <model> <venv-path> <optional-question-source>"
    exit 1
fi

echo "Running livebench benchmarks in parallel with $model, using $venv"

if [ -n "$api_base" ]; then
    echo "Using API base: $api_base"
    if [ -n "$api_key_name" ]; then
        echo "Using API key name: $api_key_name"
    else
        echo "API key name not provided"
    fi
fi

# Name of the tmux session
SESSION=$(echo "livebench-$model" | tr '.' '_' | tr ':' '_')

echo "Creating tmux session $SESSION"

# Kill existing session if it exists
tmux kill-session -t $SESSION 2>/dev/null

# Create a new tmux session
tmux new-session -d -s $SESSION

# Array of benchmark names
BENCHMARKS=(
    "live_bench/coding"
    "live_bench/data_analysis"
    "live_bench/instruction_following"
    "live_bench/language"
    "live_bench/math/AMPS_Hard"
    "live_bench/math/AMPS_Hard_2"
    "live_bench/math/math_comp"
    "live_bench/math/math_comp_2"
    "live_bench/math/olympiad_2"
    "live_bench/reasoning"
)

gen_api_answer="python -u gen_api_answer.py --model $model --question-source $question_source"
gen_ground_truth_judgment="python -u gen_ground_truth_judgment.py --model $model --question-source $question_source"

if [ -n "$api_base" ]; then
    gen_api_answer="$gen_api_answer --api-base $api_base"
fi

if [ -n "$api_key_name" ]; then
    gen_api_answer="export LIVEBENCH_API_KEY=${!api_key_name} && $gen_api_answer"
fi

# Create a new window for the first benchmark
tmux send-keys -t $SESSION "source $venv" C-m
tmux send-keys -t $SESSION "$gen_api_answer --bench-name ${BENCHMARKS[0]} && $gen_ground_truth_judgment --bench-name ${BENCHMARKS[0]}" C-m

# For each remaining benchmark
for ((i=1; i<${#BENCHMARKS[@]}; i++)); do
    # Split the current pane vertically if i is even, horizontally if odd
    if ((i % 2 == 0)); then
        tmux split-window -h -t $SESSION -e TERM=tmux
    else
        tmux split-window -v -t $SESSION -e TERM=tmux
    fi
    
    # Send the command to the new pane
    tmux send-keys -t $SESSION "source $venv" C-m
    tmux send-keys -t $SESSION "$gen_api_answer --bench-name ${BENCHMARKS[i]} && $gen_ground_truth_judgment --bench-name ${BENCHMARKS[i]}" C-m
    
    # Arrange panes in tiled layout
    tmux select-layout -t $SESSION tiled
done

# Attach to the tmux session
# tmux attach-session -t $SESSION